openapi: 3.0.0
info:
  title: api.limpid.kz
  version: 1.0.0
servers:
  - url: 'http://127.0.0.1:3333'
  - url: 'https://api.limpid.kz'
tags:
  - name: User
  - name: Users
  - name: Session
  - name: Email verification
  - name: Password recovery
  - name: Profiles
  - name: Projects
  - name: Chats
  - name: Auctions
  - name: AuctionBids
  - name: Organizations
  - name: Tenders
  - name: Notifications
  - name: Payments
security:
  - bearerAuth: []
paths:
  /users:
    post:
      tags:
        - Users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - email
                - password
                - first_name
                - last_name
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
      responses:
        '200':
          description: User is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
  /session:
    post:
      tags:
        - Session
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User is logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                      token:
                        type: string
                      expires_at:
                        type: string
    delete:
      tags:
        - Session
      responses:
        '200':
          description: User is logged out
  /email-verification:
    post:
      tags:
        - Email verification
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
      responses:
        '200':
          description: User email verification mail send
    patch:
      tags:
        - Email verification
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - email
                - token
              properties:
                email:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: User email verified
  /password-recovery:
    post:
      tags:
        - Password recovery
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password recovery mail send
    patch:
      tags:
        - Password recovery
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - email
                - password
                - token
              properties:
                email:
                  type: string
                password:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: User's password is changed
  /user:
    get:
      tags:
        - User
      responses:
        '200':
          description: User data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
    patch:
      tags:
        - User
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  nullable: true
                password:
                  type: string
                  nullable: true
                first_name:
                  type: string
                  nullable: true
                last_name:
                  type: string
                  nullable: true
                patronymic:
                  type: string
                  nullable: true
                born_at:
                  type: string
                  nullable: true
                selected_profile_id:
                  type: integer
                  nullable: true
      responses:
        '200':
          description: Updated user's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
  /profiles:
    get:
      tags:
        - Profiles
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
        - in: query
          name: user_id
          required: false
          schema:
            type: integer
        - in: query
          name: industry
          required: false
          schema:
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
      responses:
        '200':
          description: User's profiles
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
                      type: object
                      properties:
                        user:
                          $ref: '#/components/schemas/User'
    post:
      tags:
        - Profiles
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - display_name
                - description
                - location
                - industry
                - tin
                - is_visible
              properties:
                display_name:
                  type: string
                description:
                  type: string
                location:
                  type: string
                industry:
                  type: string
                owned_intellectual_resources:
                  type: string
                owned_material_resources:
                  type: string
                tin:
                  type: string
                is_visible:
                  type: boolean
                avatar:
                  type: string
                  format: binary
                instagram_url:
                  type: string
                  nullable: true
                whatsapp_url:
                  type: string
                  nullable: true
                website_url:
                  type: string
                  nullable: true
                telegram_url:
                  type: string
                  nullable: true
                two_gis_url:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Profile is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Profile'
  '/profiles/{profile_id}':
    get:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Profile data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Profile'
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
    patch:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                description:
                  type: string
                location:
                  type: string
                industry:
                  type: string
                owned_intellectual_resources:
                  type: string
                owned_material_resources:
                  type: string
                tin:
                  type: string
                is_visible:
                  type: boolean
                avatar:
                  type: string
                  format: binary
                instagram_url:
                  type: string
                  nullable: true
                whatsapp_url:
                  type: string
                  nullable: true
                website_url:
                  type: string
                  nullable: true
                telegram_url:
                  type: string
                  nullable: true
                two_gis_url:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Updated profile's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Profile'
    delete:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Profile is deleted
  '/profiles/{profile_id}/certificates':
    get:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Profile's certificates
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Certificate'
    post:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - description
                - institution
                - issued_at
                - attachment
              properties:
                title:
                  type: string
                description:
                  type: string
                institution:
                  type: string
                issued_at:
                  type: string
                expired_at:
                  type: string
                attachment:
                  type: string
                  format: binary
  '/profiles/{profile_id}/certificates/{certificate_id}':
    get:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: certificate_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Certificate data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Certificate'
    patch:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: certificate_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                institution:
                  type: string
                issued_at:
                  type: string
                expired_at:
                  type: string
                attachment:
                  type: string
                  format: binary
      responses:
        '200':
          description: Updated certificate's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Certificate'
    delete:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: certificate_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Certificate is deleted
  '/profiles/{profile_id}/educations':
    get:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Profile's educations
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Education'
    post:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - description
                - institution
                - started_at
              properties:
                title:
                  type: string
                description:
                  type: string
                institution:
                  type: string
                started_at:
                  type: string
                finished_at:
                  type: string
  '/profiles/{profile_id}/educations/{education_id}':
    get:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: education_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Education data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Education'
    patch:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: education_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                institution:
                  type: string
                started_at:
                  type: string
                finished_at:
                  type: string
      responses:
        '200':
          description: Updated education's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Education'
    delete:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: education_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Education is deleted
  '/profiles/{profile_id}/experiences':
    get:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Profile's experiences
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Experience'
    post:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - description
                - institution
                - started_at
              properties:
                title:
                  type: string
                description:
                  type: string
                institution:
                  type: string
                started_at:
                  type: string
                finished_at:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Experience data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Experience'
  '/profiles/{profile_id}/experiences/{experience_id}':
    get:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: experience_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Experience data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Experience'
    patch:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: experience_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                institution:
                  type: string
                started_at:
                  type: string
                finished_at:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Updated experience's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Experience'
    delete:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: experience_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Experience is deleted
  '/profiles/{profile_id}/skills':
    get:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Profile's skills
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Skill'
    post:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Skill data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Skill'
  '/profiles/{profile_id}/skills/{skill_id}':
    get:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: skill_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Skill data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Skill'
    patch:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: skill_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Updated skill's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Skill'
    delete:
      tags:
        - Profiles
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: path
          name: skill_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Skill is deleted
  '/projects':
    get:
      tags:
        - Projects
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
        - in: query
          name: profile_id
          required: false
          schema:
            type: integer
        - in: query
          name: industry
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: stage
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: required_money_amount
          required: false
          schema:
            type: object
            properties:
              min:
                type: integer
              max:
                type: integer
        - in: query
          name: owned_money_amount
          required: false
          schema:
            type: object
            properties:
              min:
                type: integer
              max:
                type: integer
        - in: query
          name: search
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
    post:
      tags:
        - Projects
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - description
                - location
                - industry
                - stage
                - required_money_amount
                - owned_money_amount
                - required_intellectual_resources
                - owned_intellectual_resources
                - required_material_resources
                - owned_material_resources
                - profitability
              properties:
                title:
                  type: string
                description:
                  type: string
                location:
                  type: string
                industry:
                  type: string
                stage:
                  type: string
                required_money_amount:
                  type: number
                owned_money_amount:
                  type: number
                required_intellectual_resources:
                  type: string
                owned_intellectual_resources:
                  type: string
                required_material_resources:
                  type: string
                owned_material_resources:
                  type: string
                profitability:
                  type: string
                logo:
                  type: string
                  format: binary
                video_introduction:
                  type: string
                  format: binary
                presentation:
                  type: string
                  format: binary
                business_plan:
                  type: string
                  format: binary
      responses:
        '200':
          description: Project data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
  '/projects/{project_id}':
    get:
      tags:
        - Projects
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
    patch:
      tags:
        - Projects
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                location:
                  type: string
                industry:
                  type: string
                stage:
                  type: string
                required_money_amount:
                  type: number
                owned_money_amount:
                  type: number
                required_intellectual_resources:
                  type: string
                owned_intellectual_resources:
                  type: string
                required_material_resources:
                  type: string
                owned_material_resources:
                  type: string
                profitability:
                  type: string
                logo:
                  type: string
                  format: binary
                video_introduction:
                  type: string
                  format: binary
                presentation:
                  type: string
                  format: binary
                business_plan:
                  type: string
                  format: binary
      responses:
        '200':
          description: Updated project's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
    delete:
      tags:
        - Projects
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project is deleted
  '/projects/{project_id}/members':
    get:
      tags:
        - Projects
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Project's members
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectMember'
    post:
      tags:
        - Projects
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - application_message
              properties:
                application_message:
                  type: string
      responses:
        '200':
          description: Project's member
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProjectMember'
  '/projects/{project_id}/members/{member_id}':
    delete:
      tags:
        - Projects
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
        - in: path
          name: member_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project's member is deleted
  '/projects/{project_id}/members/{member_id}/accept':
    post:
      tags:
        - Projects
      responses:
        '200':
          description: Project's member
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProjectMember'
  '/projects/{project_id}/members/{member_id}/reject':
    post:
      tags:
        - Projects
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                rejection_message:
                  type: string
      responses:
        '200':
          description: Project's member
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProjectMember'
  '/projects/{project_id}/membership':
    get:
      tags:
        - Projects
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project's membership
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProjectMember'
  '/chats':
    get:
      tags:
        - Chats
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Chats
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chat'
    post:
      tags:
        - Chats
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - user_ids
                - name
              properties:
                user_ids:
                  type: array
                  items:
                    type: integer
                name:
                  type: string
  '/chats/{chat_id}':
    get:
      tags:
        - Chats
      parameters:
        - in: path
          name: chat_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Chat
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Chat'
    delete:
      tags:
        - Chats
      parameters:
        - in: path
          name: chat_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Chat is deleted
  '/chats/{chat_id}/messages':
    get:
      tags:
        - Chats
      parameters:
        - in: path
          name: chat_id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                      type: object
                      properties:
                        user:
                          $ref: '#/components/schemas/User'
    post:
      tags:
        - Chats
      parameters:
        - in: path
          name: chat_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
      responses:
        '200':
          description: Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Message'
  '/auctions':
    get:
      tags:
        - Auctions
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
        - in: query
          name: profile_id
          required: false
          schema:
            type: integer
        - in: query
          name: industry
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Auctions
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Auction'
    post:
      tags:
        - Auctions
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - description
                - industry
                - duration
                - starting_price
              properties:
                title:
                  type: string
                description:
                  type: string
                industry:
                  type: string
                duration:
                  type: string
                starting_price:
                  type: number
                purchase_price:
                  type: number
                technical_specification:
                  type: string
                  format: binary
                photo_one:
                  type: string
                  format: binary
                photo_two:
                  type: string
                  format: binary
                photo_three:
                  type: string
                  format: binary
                photo_four:
                  type: string
                  format: binary
                photo_five:
                  type: string
                  format: binary
                type:
                  type: string
      responses:
        '200':
          description: Auction data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auction'
  '/auctions/{auction_id}':
    get:
      tags:
        - Auctions
      parameters:
        - in: path
          name: auction_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Auction data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auction'
    patch:
      tags:
        - Auctions
      parameters:
        - in: path
          name: auction_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                industry:
                  type: string
                duration:
                  type: string
                starting_price:
                  type: number
                purchase_price:
                  type: number
                won_auction_bid_id:
                  type: integer
                type:
                  type: string
                photo_one:
                  type: string
                  format: binary
                photo_two:
                  type: string
                  format: binary
                photo_three:
                  type: string
                  format: binary
                photo_four:
                  type: string
                  format: binary
                photo_five:
                  type: string
                  format: binary
      responses:
        '200':
          description: Updated auctions's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auction'
    delete:
      tags:
        - Auctions
      parameters:
        - in: path
          name: auction_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Auction is deleted
  '/auctions/{auction_id}/bids':
    get:
      tags:
        - AuctionBids
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
        - in: query
          name: auction_id
          required: false
          schema:
            type: integer
        - in: query
          name: industry
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
      responses:
        '200':
          description: AuctionBids
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuctionBid'
    post:
      tags:
        - AuctionBids
      parameters:
        - in: query
          name: auction_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - price
              properties:
                price:
                  type: number
      responses:
        '200':
          description: AuctionBid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AuctionBid'
  '/auctions/{auction_id}/bids/user':
    get:
      tags:
        - AuctionBids
      parameters:
        - in: path
          name: auction_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: One participant's AuctionBid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AuctionBid'
  '/auctions/{auction_id}/bids/{auction_bid_id}':
    patch:
      tags:
        - AuctionBids
      parameters:
        - in: path
          name: auction_id
          required: true
          schema:
            type: integer
        - in: path
          name: auction_bid_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                price:
                  type: number
      responses:
        '200':
          description: Updated auctionBid's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AuctionBid'
  '/organizations':
    get:
      tags:
        - Organizations
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
        - in: query
          name: user_id
          required: false
          schema:
            type: integer
        - in: query
          name: industry
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Organizations
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
    post:
      tags:
        - Organizations
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - display_name
                - description
                - location
                - industry
                - tin
                - perfomance
                - legal_structure
                - is_visible
              properties:
                display_name:
                  type: string
                description:
                  type: string
                location:
                  type: string
                industry:
                  type: string
                owned_intellectual_resources:
                  type: string
                owned_material_resources:
                  type: string
                tin:
                  type: string
                perfomance:
                  type: string
                legal_structure:
                  type: string
                is_visible:
                  type: boolean
                avatar:
                  type: string
                  format: binary
                instagram_url:
                  type: string
                  nullable: true
                whatsapp_url:
                  type: string
                  nullable: true
                website_url:
                  type: string
                  nullable: true
                telegram_url:
                  type: string
                  nullable: true
                two_gis_url:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Organization data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Profile'
  '/organizations/{organization_id}':
    get:
      tags:
        - Organizations
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Organization data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Profile'
    patch:
      tags:
        - Organizations
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                description:
                  type: string
                location:
                  type: string
                industry:
                  type: string
                owned_intellectual_resources:
                  type: string
                owned_material_resources:
                  type: string
                tin:
                  type: string
                perfomance:
                  type: string
                legal_structure:
                  type: string
                is_visible:
                  type: boolean
                avatar:
                  type: string
                  format: binary
                instagram_url:
                  type: string
                  nullable: true
                whatsapp_url:
                  type: string
                  nullable: true
                website_url:
                  type: string
                  nullable: true
                telegram_url:
                  type: string
                  nullable: true
                two_gis_url:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Updated organization's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Profile'
    delete:
      tags:
        - Organizations
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deleted organization's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Profile'
  '/organizations/{organization_id}/members':
    get:
      tags:
        - Organizations
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Organization's members
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganizationMember'
    post:
      tags:
        - Organizations
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - application_message
              properties:
                application_message:
                  type: string
      responses:
        '200':
          description: Organization's member
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OrganizationMember'
  '/organizations/{organization_id}/members/{member_id}':
    delete:
      tags:
        - Organizations
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: integer
        - in: path
          name: member_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Organization's member is deleted
  '/organizations/{organization_id}/members/{member_id}/accept':
    post:
      tags:
        - Organizations
      responses:
        '200':
          description: Organization's member
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OrganizationMember'
  '/organizations/{organization_id}/members/{member_id}/reject':
    post:
      tags:
        - Organizations
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                rejection_message:
                  type: string
      responses:
        '200':
          description: Organization's member
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OrganizationMember'
  '/organizations/{profile_id}/certificates':
    get:
      tags:
        - Organizations
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Profile's certificates
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Certificate'
    post:
      tags:
        - Organizations
      parameters:
        - in: path
          name: profile_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - description
                - institution
                - issued_at
                - attachment
              properties:
                title:
                  type: string
                description:
                  type: string
                institution:
                  type: string
                issued_at:
                  type: string
                expired_at:
                  type: string
                attachment:
                  type: string
                  format: binary
  '/organizations/{organization_id}/certificates/{certificate_id}':
    get:
      tags:
        - Organizations
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: integer
        - in: path
          name: certificate_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Certificate data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Certificate'
    patch:
      tags:
        - Organizations
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: integer
        - in: path
          name: certificate_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                institution:
                  type: string
                issued_at:
                  type: string
                expired_at:
                  type: string
                attachment:
                  type: string
                  format: binary
      responses:
        '200':
          description: Updated certificate's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Certificate'
    delete:
      tags:
        - Organizations
      parameters:
        - in: path
          name: organization_id
          required: true
          schema:
            type: integer
        - in: path
          name: certificate_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Certificate is deleted
  '/tenders':
    get:
      tags:
        - Tenders
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Tenders
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tender'
    post:
      tags:
        - Tenders
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - description
                - starting_price
                - duration
                - purchase_type
                - industry
              properties:
                title:
                  type: string
                description:
                  type: string
                starting_price:
                  type: integer
                industry:
                  type: string
                purchase_type:
                  type: string
                duration:
                  type: string
                tecnical_specification:
                  type: string
                  format: binary
      responses:
        '200':
          description: Tender
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tender'
  '/tenders/{tender_id}':
    get:
      tags:
        - Tenders
      parameters:
        - in: path
          name: tender_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tender
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tender'
    patch:
      tags:
        - Tenders
      parameters:
        - in: path
          name: tender_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                starting_price:
                  type: integer
                industry:
                  type: string
                duration:
                  type: string
                tecnical_specification:
                  type: string
                  format: binary
                purchase_type:
                  type: string
      responses:
        '200':
          description: Updated tender's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tender'
    delete:
      tags:
        - Tenders
      parameters:
        - in: path
          name: tender_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tender is deleted
  '/tenders/{tender_id}/winner':
    patch:
      tags:
        - Tenders
      parameters:
        - in: path
          name: tender_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - won_tender_bid_id
              properties:
                won_tender_bid_id:
                  type: integer
      responses:
        '200':
          description: Updated tender's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tender'
  '/tenders/{tender_id}/bids':
    get:
      tags:
        - Tenders
      parameters:
        - in: path
          name: tender_id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: TenderBids
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TenderBid'
  '/tenders/{tender_id}/bid':
    post:
      tags:
        - Tenders
      parameters:
        - in: path
          name: tender_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - price
              properties:
                price:
                  type: number
      responses:
        '200':
          description: TenderBid
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TenderBid'
    get:
      tags:
        - Tenders
      parameters:
        - in: path
          name: tender_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: TenderBid
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TenderBid'
    patch:
      tags:
        - Tenders
      parameters:
        - in: path
          name: tender_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                price:
                  type: number
      responses:
        '200':
          description: Updated tender bid's data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TenderBid'
  '/notifcations':
    get:
      tags:
        - Notifications
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
  '/notifcations/{notification_id}':
    get:
      tags:
        - Notifications
      parameters:
        - in: path
          name: notification_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Notification
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification'
  '/notifcations/{notification_id}/read':
    post:
      tags:
        - Notifications
      parameters:
        - in: path
          name: notification_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Notification is read
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification'
  '/payments':
    get:
      tags:
        - Payments
      responses:
        '200':
          description: Sub_plans
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubPlans'
    post:
      tags:
        - Payments
      responses:
        '200':
          description: Invoices
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoices'
  '/payments/{sub_plan_id}':
    get:
      tags:
        - Payments
      parameters:
        - in: path
          name: sub_plan_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Invoices
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoices'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Pagination:
      type: object
      properties:
        total:
          type: integer
        per_page:
          type: integer
        current_page:
          type: integer
        last_page:
          type: integer
        first_page:
          type: integer
        first_page_url:
          type: string
        last_page_url:
          type: string
        next_page_url:
          type: string
        previous_page_url:
          type: string
          nullable: true
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        selected_profile_id:
          type: integer
          nullable: true
        first_name:
          type: string
        last_name:
          type: string
        patronymic:
          type: string
          nullable: true
        email_verified_at:
          type: string
          nullable: true
        born_at:
          type: string
          nullable: true
        created_at:
          type: string
        updated_at:
          type: string
    Profile:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        views:
          type: integer
        display_name:
          type: string
        description:
          type: string
        location:
          type: string
        industry:
          type: string
        owned_intellectual_resources:
          type: string
          nullable: true
        owned_material_resources:
          type: string
          nullable: true
        tin:
          type: string
        legal_structure:
          type: string
          nullable: true
        perfomance:
          type: string
          nullable: true
        is_visible:
          type: boolean
        is_personal:
          type: boolean
        avatar:
          $ref: '#/components/schemas/Attachment'
        instagram_url:
          type: string
          nullable: true
        whatsapp_url:
          type: string
          nullable: true
        website_url:
          type: string
          nullable: true
        telegram_url:
          type: string
          nullable: true
        two_gis_url:
          type: string
          nullable: true
        tin_verified_at:
          type: string
          nullable: true
        created_at:
          type: string
        updated_at:
          type: string
    Attachment:
      type: object
      properties:
        url:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        size:
          type: string
        extname:
          type: string
        mimeType:
          type: string
    Certificate:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        institution:
          type: string
        profile_id:
          type: integer
        attachment:
          $ref: '#/components/schemas/Attachment'
        issued_at:
          type: string
        expired_at:
          type: string
          nullable: true
    Education:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        institution:
          type: string
        profile_id:
          type: integer
        started_at:
          type: string
        finished_at:
          type: string
          nullable: true
    Experience:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        institution:
          type: string
        profile_id:
          type: integer
        started_at:
          type: string
        finished_at:
          type: string
          nullable: true
    Project:
      type: object
      properties:
        id:
          type: integer
        profile_id:
          type: integer
        chat_id:
          type: integer
        title:
          type: string
        description:
          type: string
        location:
          type: string
        industry:
          type: string
        stage:
          type: string
        required_money_amount:
          type: number
        owned_money_amount:
          type: number
        required_material_resources:
          type: string
        owned_material_resources:
          type: string
        required_intellectual_resources:
          type: string
        owned_intellectual_resources:
          type: string
        profitability:
          type: string
        logo:
          $ref: '#/components/schemas/Attachment'
          nullable: true
        video_introduction:
          $ref: '#/components/schemas/Attachment'
          nullable: true
        presentation:
          $ref: '#/components/schemas/Attachment'
          nullable: true
        business_plan:
          $ref: '#/components/schemas/Attachment'
          nullable: true
        created_at:
          type: string
        updated_at:
          type: string
        verified_at:
          type: string
          nullable: true
    Skill:
      type: object
      properties:
        id:
          type: integer
        profile_id:
          type: integer
        name:
          type: string
    Chat:
      type: object
      properties:
        id:
          type: integer
        project_id:
          type: integer
          nullable: true
        name:
          type: string
        created_at:
          type: string
    Message:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        chat_id:
          type: integer
        message:
          type: string
        created_at:
          type: string
    Auction:
      type: object
      properties:
        id:
          type: integer
        profile_id:
          type: integer
        title:
          type: string
        description:
          type: string
        industry:
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        starting_price:
          type: number
          nullable: true
        purchase_price:
          type: number
          nullable: true
        type:
          type: string
        technical_specification:
          $ref: '#/components/schemas/Attachment'
          nullable: true
        photo_one:
          $ref: '#/components/schemas/Attachment'
          nullable: true
        photo_two:
          $ref: '#/components/schemas/Attachment'
          nullable: true
        photo_three:
          $ref: '#/components/schemas/Attachment'
          nullable: true
        photo_four:
          $ref: '#/components/schemas/Attachment'
          nullable: true
        photo_five:
          $ref: '#/components/schemas/Attachment'
          nullable: true
        won_auction_bid_id:
          type: integer
        won_auction_bid:
          $ref: '#/components/schemas/AuctionBid'
          nullable: true
        verified_at:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    AuctionBid:
      type: object
      properties:
        id:
          type: integer
        profile_id:
          type: integer
        auction_id:
          type: integer
        price:
          type: number
        created_at:
          type: string
        updated_at:
          type: string
    ProjectMember:
      type: object
      properties:
        id:
          type: integer
        project_id:
          type: integer
        profile_id:
          type: integer
        profile:
          $ref: '#/components/schemas/Profile'
          nullable: true
        application_message:
          type: string
        rejection_message:
          type: string
          nullable: true
        applied_at:
          type: string
          format: date-time
        accepted_at:
          type: string
          nullable: true
        rejected_at:
          type: string
          nullable: true
        status:
          type: string
          enum: [pending, accepted, rejected]
    OrganizationMember:
      type: object
      properties:
        id:
          type: integer
        profile_id:
          type: integer
        application_message:
          type: string
        rejection_message:
          type: string
          nullable: true
        applied_at:
          type: string
          format: date-time
        accepted_at:
          type: string
          nullable: true
        rejected_at:
          type: string
          nullable: true
    Tender:
      type: object
      properties:
        id:
          type: integer
        profile_id:
          type: integer
        won_tender_bid_id:
          type: integer
          nullable: true
        won_tender_bid:
          $ref: '#/components/schemas/TenderBid'
          nullable: true
        title:
          type: string
        description:
          type: string
        industry:
          type: string
        starting_price:
          type: number
          nullable: true
        purchase_type:
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        technical_specification:
          $ref: '#/components/schemas/Attachment'
          nullable: true
        verified_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    TenderBid:
      type: object
      properties:
        id:
          type: integer
        profile_id:
          type: integer
        tender_id:
          type: integer
        price:
          type: number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Notification:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        title:
          type: string
        description:
          type: string
        type:
          type: string
        meta:
          type: object
        read_at:
          type: string
          format: date-time
          nullable: true
        send_at:
          type: string
          format: date-time
    SubPlans:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        amount:
          type: integer
        projects_attempts:
          type: integer
        auctions_attempts:
          type: integer
        duration:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Invoices:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        plan_id:
          type: integer
        amount:
          type: integer
        currency:
          type: string
        description:
          type: string
        post_link:
          type: string
        language:
          type: string
        terminal:
          type: string
        status:
          type: string
        pay_id:
          type: string
        cancel_token:
          type: string
        check_url:
          type: string
        invoice_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Duration:
      type: object
      properties:
        years:
          type: integer
          nullable: true
        months:
          type: integer
          nullable: true
        days:
          type: integer
          nullable: true
        hours:
          type: integer
          nullable: true
        minutes:
          type: integer
          nullable: true
        seconds:
          type: integer
          nullable: true
